<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qinzi123.dao.CooperateDao">

    <insert id="addMessage" useGeneratedKeys="true" parameterType="com.qinzi123.dto.CardMessage">
		insert into card_message(card_id, form_id, title, message, read_count, give_like, message_type, source_type, source_path)
		values(#{cardId}, #{formId}, #{title}, #{message}, 0, 0, #{messageType}, #{sourceType}, #{sourcePath})
	</insert>

    <select id="getCardMessageId" resultType="int">
		select id from card_message where title = #{title}
	</select>

    <insert id="addMessagePictures" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.Map">
		insert into card_message_picture(card_message_id, url)
		values(#{cardMessageId}, #{url})
	</insert>

    <update id="updateMessageRead" parameterType="com.qinzi123.dto.CardMessage">
		update card_message set read_count = read_count + 1 where id =#{id}
	</update>

    <update id="updateMessageLike" parameterType="com.qinzi123.dto.CardMessage">
		update card_message set give_like = give_like + 1 where id =#{id}
	</update>


    <resultMap type="com.qinzi123.dto.CardMessage" id="cardMessage">
        <id property="id" column="id"/>
        <result property="cardId" column="card_id"/>
        <result property="formId" column="form_id"/>
        <result property="title" column="title"/>
        <result property="message" column="message"/>
        <result property="updateTime" column="update_time"/>
        <result property="last" column="last"/>
        <result property="readCount" column="read_count"/>
        <result property="giveLike" column="give_like"/>
        <result property="messageType" column="message_type"/>
        <result property="sourceType" column="source_type"/>
        <result property="sourcePath" column="source_path"/>
        <association property="cardInfo" javaType="com.qinzi123.dto.CardInfo">
            <id property="id" column="bid"/>
            <result property="openid" column="openid"/>
            <result property="phone" column="phone"/>
            <result property="realname" column="realname"/>
            <result property="company" column="company"/>
            <result property="job" column="job"/>
            <result property="headimgurl" column="headimgurl"/>
        </association>
    </resultMap>

    <sql id="select_card_message">
		select a.id, card_id, form_id, title, message, update_time, TIMESTAMPDIFF(MINUTE, update_time, sysdate()) as last,
		read_count, give_like, b.id as bid, openid, phone, realname, company, job, headimgurl, a.message_type,
		 a.source_type, a.source_path
			from card_message a, card_info b where a.card_id = b.id
	</sql>

    <select id="getAllCardMessage" resultMap="cardMessage">
        <include refid="select_card_message"/>
        and a.verify = 1
        order by update_time desc
        limit #{start}, #{num}
    </select>

    <select id="getCardMessageByCardId" resultMap="cardMessage">
        <include refid="select_card_message"/>
        and a.card_id = #{cardId} and a.verify = 1
        order by update_time desc
        limit #{start}, #{num}
    </select>

    <select id="getCardMessageById" resultMap="cardMessage">
        <include refid="select_card_message"/>
        and a.id = #{messageId} and a.verify = 1
    </select>

    <!-- 发送消息-->
    <select id="getFansUser2Push" resultType="java.lang.String">
		select c.openid from card_info c, follower f where c.id = f.user_id and f.follower_id = #{followerId}
	</select>
    <insert id="addMessageSend" useGeneratedKeys="true" parameterType="com.qinzi123.dto.CardMessageSend">
		insert into card_message_send(card_id, message_id, openid) values(#{cardId}, #{messageId}, #{openid})
	</insert>

    <insert id="addCardSend" useGeneratedKeys="true" parameterType="com.qinzi123.dto.CardInfoSend">
		insert into card_message_send(card_id, new_card_id, openid) values(#{cardId}, #{newCardId}, #{openid})
	</insert>

    <insert id="addCurrentToken" useGeneratedKeys="true" parameterType="com.qinzi123.dto.WxSmallToken">
		insert into wx_small_token(token) values(#{token})
	</insert>
    <resultMap type="com.qinzi123.dto.WxSmallToken" id="smallToken">
        <id property="id" column="id"/>
        <result property="token" column="token"/>
        <result property="createTime" column="create_time"/>
    </resultMap>
    <select id="getCurrentToken" resultMap="smallToken">
		select id, token, DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%S') as create_time from wx_small_token
		ORDER BY create_time desc limit 1
	</select>

    <!-- 保存formId -->
    <insert id="addFormId" useGeneratedKeys="true" parameterType="com.qinzi123.dto.WxSmallFormId">
		insert into wx_small_formId(card_id, form_id, is_use) values(#{cardId}, #{formId}, #{isUse})
	</insert>
    <update id="updateFormId" parameterType="com.qinzi123.dto.WxSmallFormId">
		update wx_small_formId set is_use = #{isUse} where id = #{id}
	</update>
    <resultMap type="com.qinzi123.dto.WxSmallFormId" id="smallFormId">
        <id property="id" column="id"/>
        <result property="cardId" column="card_id"/>
        <result property="formId" column="form_id"/>
        <result property="isUse" column="is_use"/>
        <result property="createTime" column="create_time"/>
        <!--result property="updateTime" column="update_time"/-->

    </resultMap>

    <sql id="select_small_formId">
		select id, card_id, form_id, is_use, create_time from wx_small_formId
		where is_use = 0 and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= create_time
	</sql>

    <select id="getCanUseSmallFormId" resultMap="smallFormId">
        <include refid="select_small_formId"/>
        and card_id = #{cardId}
        order by create_time
    </select>

    <select id="getEveryUserCanUseSmallFormId" resultMap="smallFormId">
        <include refid="select_small_formId"/>
        group by card_id
        order by create_time
    </select>


    <insert id="addCardMessageReply" useGeneratedKeys="true" parameterType="com.qinzi123.dto.CardMessageReply">
		insert into card_message_reply(message_id, card_id, reply_id, reply_message)
		values(#{messageId}, #{cardId}, #{replyId}, #{replyMessage})
	</insert>
    <resultMap type="com.qinzi123.dto.CardMessageReply" id="cardMessageReply">
        <id property="id" column="id"/>
        <result property="messageId" column="message_id"/>
        <result property="cardId" column="card_id"/>
        <result property="replyId" column="reply_id"/>
        <result property="replyMessage" column="reply_message"/>
        <result property="createTime" column="create_time"/>
        <result property="last" column="last"/>
        <association property="cardInfo" javaType="com.qinzi123.dto.CardInfo">
            <id property="id" column="bid"/>
            <result property="openid" column="openid"/>
            <result property="phone" column="phone"/>
            <result property="realname" column="realname"/>
            <result property="company" column="company"/>
            <result property="job" column="job"/>
            <result property="headimgurl" column="headimgurl"/>
        </association>
    </resultMap>

    <sql id="get_card_message_reply">
		select a.id, message_id, card_id, reply_id, reply_message, create_time,
		TIMESTAMPDIFF(MINUTE, create_time, sysdate()) as last,
		b.id as bid, b.openid, b.phone, b.realname, b.company, b.job, b.headimgurl
		from card_message_reply a, card_info b, card_info c where a.card_id = b.id
	</sql>

    <sql id="get_active_cooperate_reply">
		select DISTINCT card_id , card_id as bid, openid, c.phone, realname, company, job, headimgurl from card_info c left join wx_order a on c.id = a.card_id LEFT JOIN wx_order_pay_score b on a.order_no = b.order_no
	</sql>

    <select id="getAllCardMessageReplyByMessageId" resultMap="cardMessageReply">
        <include refid="get_card_message_reply"/>
        and message_id = #{messageId} and a.verify = 1
    </select>

    <select id="getActiveCooperateListByMessage" resultMap="cardMessageReply">
        <include refid="get_active_cooperate_reply"/>
        where message = #{message}
    </select>

    <select id="getCardMessageReplyById" resultMap="cardMessageReply">
        <include refid="get_card_message_reply"/>
        and a.id = #{replyId} and a.verify = 1
    </select>

    <select id="getMessage" resultType="java.util.LinkedHashMap">
        select DISTINCT product_id,message from wx_order_item where product_id = #{messageId}
	</select>

    <select id="pictureList" resultType="java.util.LinkedHashMap">
		select url from card_message_picture where card_message_id = #{messageId}
    </select>

</mapper>