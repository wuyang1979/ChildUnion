<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qinzi123.dao.ShopDao">

    <select id="getShopInfoByCardId" resultType="java.util.LinkedHashMap">
		select * from shop_info where card_id = #{card}
    </select>

    <select id="checkShopName" resultType="java.util.LinkedHashMap">
		select * from shop_info where name = #{shopName}
    </select>

    <select id="checkCompanyShop" resultType="java.util.LinkedHashMap">
        select card_id,id,name from shop_info where company_id = (select company_id from card_info where id = #{card})
    </select>

    <select id="getAllAllowDistributionProductList" resultType="java.util.LinkedHashMap">
		select id,is_hot,card_id,shop_id,name,address,address_name,longitude,latitude,type,product_type,product_style,
		main_image,repeat_purchase,phone,introduce,vedio_path,instruction,buy_count,
		date_format(create_time,'%Y-%m-%d') as create_time,
		date_format(deadline_time,'%Y-%m-%d %H:%i') as deadline_time from product_info
		where is_allow_distribution = 1
    </select>

    <select id="getShopInfo" resultType="java.util.LinkedHashMap">
		select * from shop_info where id = #{shopId}
    </select>

    <select id="getShopownerPhoneByShopId" resultType="string">
		select phone from card_info where id = (select card_id from shop_info where id = #{shopId})
    </select>

    <select id="getVisitCountByShopId" resultType="int">
		select visit_count from shop_info where id = #{shopId}
    </select>

    <select id="getAllWriteOffClerkListByCompanyId" resultType="java.util.LinkedHashMap">
		select * from c_end_write_off_info where shop_id = #{shopId}
    </select>

    <select id="listProduct" resultType="java.util.LinkedHashMap">
	    select DISTINCT p.id,p.is_hot,p.card_id,p.shop_id,p.name,p.address,p.address_name,p.longitude,p.latitude,p.type,p.product_type,
	    p.product_style,p.wuyu_type,p.main_image,p.repeat_purchase,p.phone,p.introduce,p.vedio_path,p.instruction,p.buy_count,
	    date_format(p.create_time,'%Y-%m-%d') as create_time,
	    date_format(p.deadline_time,'%Y-%m-%d %H:%i') as deadline_time
	    from product_info p left join distribution_record d on p.id = d.product_id
		where (p.shop_id = #{shopId} or d.primary_shop_id = #{shopId}) and p.status = 1 order by p.is_hot desc, p.create_time desc limit #{start}, #{num}
    </select>

    <select id="getCompanyIdInnerShopByProductId" resultType="int">
	    select company_id from shop_info where id = (select shop_id from product_info where id = #{productId})
    </select>

	<select id="getShopListByUserId" resultType="java.util.LinkedHashMap">
		select * from shop_info
			where card_id = (select id from card_info
								where phone = (select phone from c_end_user_info
													where id = #{userId} and belong = 0))
    </select>

    <select id="getQrCodeByProductId" resultType="string">
	    select qr_image from product_info where id = #{productId}
    </select>

    <select id="getShopTypeByCardId" resultType="java.util.Map">
		select shop_type from shop_info where card_id = #{card}
    </select>

    <select id="getUserInfoByCardId" resultType="java.util.Map">
	    select realname,openid,headimgurl from card_info where id = #{cardId}
    </select>

    <insert id="addShop" useGeneratedKeys="true" keyProperty="id" parameterType="com.qinzi123.dto.ShopInfo">
		insert into shop_info(card_id, company_id,name,logopic,can_withdrawal_money,already_withdrawal_money,progress_withdrawal_money,shop_type,create_time)
		                        values(#{cardId},(select company_id from card_info where id = #{cardId}),#{name},(select logopic from buss_league_info where id = (select company_id from card_info where id = #{cardId})),#{canWithdrawalMoney},#{alreadyWithdrawalMoney},#{progressWithdrawalMoney},#{shopType},#{createTime})
	</insert>

    <insert id="addDistributionShop" useGeneratedKeys="true" keyProperty="id" parameterType="com.qinzi123.dto.ShopInfo">
		insert into shop_info(card_id, name,can_withdrawal_money,already_withdrawal_money,progress_withdrawal_money,shop_type,create_time)
		             values(#{cardId},#{name},#{canWithdrawalMoney},#{alreadyWithdrawalMoney},#{progressWithdrawalMoney},#{shopType},#{createTime})
	</insert>

    <insert id="addShopownerToWriteOff" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.Map">
		insert into c_end_write_off_info(open_id, shop_id,nick_name,head_img_url,create_time)
		                        values(#{open_id},#{shop_id},#{nick_name},#{head_img_url},#{create_time})
	</insert>

    <update id="updateShopInfoById" parameterType="java.util.Map">
    	update shop_info
		set name = #{shopName}, logopic=#{logopic}, account_name = #{accountName}, bank_name = #{bankName}, bank_account = #{bankAccount}
		where id = #{id}
	</update>

    <update id="addVisitCountByShopId" parameterType="java.util.Map">
    	update shop_info set visit_count = visit_count + 1 where id = #{shopId}
	</update>

</mapper>